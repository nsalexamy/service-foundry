apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: logs-count
  namespace: o11y

spec:
  image: otel/opentelemetry-collector-contrib:latest # 0.127.0 or later
  mode: statefulset
  serviceAccount: otel-targetallocator-sa
  # must be one because this handles _count_total metrics
  # if using multiple replicas, the value of the metric will be up and down which is not what we want
  replicas: 1

  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      transform/instrumentation_scope:
        log_statements:
          - context: log
            statements:
              - set(attributes["throwing_class"], instrumentation_scope.name)
              #- set(attributes["instrumentation_scope.name"], instrumentation_scope.name)
              - set(attributes["service_name"], resource.attributes["service.name"])
              - set(attributes["host_name"], resource.attributes["host.name"])

    connectors:
      count:
        logs:
          otel_spring_example_error_count:
            description: "Count of service errors"
            conditions:
              - 'severity_number >= SEVERITY_NUMBER_ERROR'
              - 'attributes["service_name"] == "otel-spring-example"'

            # only only key attributes are supported
            attributes:
              # - key: service_name
              # value: attributes["service_name"]
              # - key: host_name
              # default_value: 'unspecified_host'
              # - key: throwing_class
              # value: attributes["throwing_class"]
              # - key: service.name
              # value: attributes["service.name"]
              #- key: host.name
              #  value: attributes["host.name"]
              - key: exception.type
                default_value: 'unspecified_exception_type'
              # - key: service.name
              #- key: host.name
              #- key: instrumentation_scope.name
              #- name: exception.type

            #  - key: service.name
            #  - key: host.name
            #  - key: telemetry.sdk.language
            #conditions:
            #  - 'severity_number >= SEVERITY_NUMBER_ERROR'
    exporters:
      debug:
        verbosity: detailed

      prometheus:
        endpoint: "0.0.0.0:8889"

    service:
      pipelines:
        logs:
          receivers: [otlp]
          processors: [transform/instrumentation_scope]
          exporters: [count]

        metrics/count:
          receivers: [count]
          processors: []
          exporters: [debug, prometheus]

